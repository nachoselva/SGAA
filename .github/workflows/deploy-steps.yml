name: Deploy Steps

on:
  push:
    branches: [ feature/elastic-beanstalk ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::417268992578:role/custom-github-actions-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: ./
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sgaa_api_production
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker-compose build sgaa.api
          docker tag sgaa_api:latest $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Install Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install EB CLI
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli
          
      - name: Init EB CLI
        working-directory: ./infra/deploy
        run: |
          eb init

      - name: Deploy to Elastic Beanstalk
        working-directory: ./infra/deploy
        run: |
          eb deploy
#          
#      - name: Setup Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '20.10'
#          registry-url: 'https://registry.npmjs.org/'
#
#      - name: Build and export static files
#        working-directory: ./Frontend/SGAA.ReactApp
#        run: |
#          npm install --global @create-next-app
#          npm install
#          npm run build
#          npm run export
#  
#      - uses: shallwefootball/s3-upload-action@master
#        with:
#          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
#          aws_bucket: ${{ secrets.AWS_BUCKET }}
#          source_dir: ''
#          
#      - name: Invalidate CloudFront
#        uses: chetan/invalidate-cloudfront-action@v2
#        env:
#          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION }}
#          PATHS: "/index.html"
#          AWS_REGION: "us-east-1"
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}